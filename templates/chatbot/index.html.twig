{% extends 'base.html.twig' %}

{% block title %}Chatbot Musical{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #chat-container {
            max-width: 800px;
            margin: 2rem auto;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            overflow: hidden;
            font-family: 'Segoe UI', sans-serif;
        }
        
        #chat-header {
            background: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%);
            color: white;
            padding: 1.5rem;
            text-align: center;
        }
        
        #chat-messages {
            height: 500px;
            overflow-y: auto;
            padding: 20px;
            background: #f8f9fa;
        }
        
        .message {
            margin-bottom: 15px;
            max-width: 80%;
            padding: 12px 16px;
            border-radius: 18px;
            animation: fadeIn 0.3s;
            line-height: 1.5;
        }
        
        .user-message {
            background: #6c5ce7;
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 5px;
        }
        
        .bot-message {
            background: #e9ecef;
            margin-right: auto;
            border-bottom-left-radius: 5px;
        }
        
        .typing-indicator {
            display: inline-flex;
            align-items: center;
            padding: 10px 15px;
            background: #e9ecef;
            border-radius: 18px;
            margin-bottom: 15px;
        }
        
        .typing-indicator span {
            width: 8px;
            height: 8px;
            margin: 0 2px;
            background: #6c5ce7;
            border-radius: 50%;
            display: inline-block;
            animation: bounce 1.4s infinite ease-in-out;
        }
        
        .typing-indicator span:nth-child(2) {
            animation-delay: 0.2s;
        }
        
        .typing-indicator span:nth-child(3) {
            animation-delay: 0.4s;
        }
        
        #chat-input-container {
            padding: 15px;
            background: white;
            display: flex;
            gap: 10px;
            border-top: 1px solid #eee;
        }
        
        #chat-input {
            flex: 1;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 25px;
            outline: none;
            transition: all 0.3s;
        }
        
        #chat-input:focus {
            border-color: #6c5ce7;
        }
        
        #send-btn {
            background: #6c5ce7;
            color: white;
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        #send-btn:hover {
            background: #5649d1;
            transform: scale(1.05);
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes bounce {
            0%, 60%, 100% { transform: translateY(0); }
            30% { transform: translateY(-5px); }
        }
    </style>
{% endblock %}

{% block body %}
<div id="chat-container">
    <div id="chat-header">
        <h2><i class="fas fa-robot"></i> Assistant Musical Moodify</h2>
    </div>
    
    <div id="chat-messages">
        <div class="bot-message message">
            Bonjour ! Dites-moi comment vous vous sentez et je vous recommanderai une playlist adaptée.
        </div>
    </div>
    
    <div id="chat-input-container">
        <input type="text" id="chat-input" placeholder="Écrivez votre message..." autocomplete="off">
        <button id="send-btn"><i class="fas fa-paper-plane"></i></button>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const chatInput = document.getElementById('chat-input');
            const sendBtn = document.getElementById('send-btn');
            const chatMessages = document.getElementById('chat-messages');
            
            function addMessage(text, isUser) {
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
                messageDiv.textContent = text;
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
            
            function showTyping() {
                const typingDiv = document.createElement('div');
                typingDiv.className = 'typing-indicator';
                typingDiv.innerHTML = `
                    <span></span>
                    <span></span>
                    <span></span>
                `;
                chatMessages.appendChild(typingDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
                return typingDiv;
            }
            
            async function sendMessage() {
                const message = chatInput.value.trim();
                if (!message) return;
                
                addMessage(message, true);
                chatInput.value = '';
                const typing = showTyping();
                
                try {
                    const response = await fetch('{{ path('api_chatbot') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ 
                            message: message
                        })
                    });
                    
                    if (!response.ok) {
                        throw new Error(`Erreur HTTP: ${response.status}`);
                    }
                    
                    const data = await response.json();
                    typing.remove();
                    
                    if (data.error) {
                        console.error("Erreur API:", data.error);
                        addMessage(`${data.response}`, false);
                    } else {
                        addMessage(data.response, false);
                    }
                } catch (error) {
                    typing.remove();
                    console.error("Erreur technique:", error);
                    addMessage("Désolé, le service est temporairement indisponible. Veuillez réessayer plus tard.", false);
                }
            }
            
            sendBtn.addEventListener('click', sendMessage);
            chatInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') sendMessage();
            });
        });
    </script>
{% endblock %}